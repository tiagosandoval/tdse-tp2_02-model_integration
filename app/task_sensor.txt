Para modificarlo a N sensores (en este caso N = 2), se debe modificar

...
const task_sensor_cfg_t task_sensor_cfg_list[] = {
	{ID_BTN_A,  BTN_A_PORT,  BTN_A_PIN,  BTN_A_PRESSED, DEL_BTN_XX_MAX, EV_SYS_XX_IDLE,  EV_SYS_XX_ACTIVE}
};
...
task_sensor_dta_t task_sensor_dta_list[] = {
	{DEL_BTN_XX_MIN, ST_BTN_XX_UP, EV_BTN_XX_UP}
};
...



por 

...
const task_sensor_cfg_t task_sensor_cfg_list[] = {
	{ID_BTN_A,  BTN_A_PORT,  BTN_A_PIN,  BTN_A_PRESSED, DEL_BTN_XX_MAX, EV_SYS_XX_IDLE,  EV_SYS_XX_ACTIVE},
	{ID_BTN_B,  BTN_B_PORT,  BTN_B_PIN,  BTN_B_PRESSED, DEL_BTN_YY_MAX, EV_SYS_YY_IDLE,  EV_SYS_YY_ACTIVE}
};
...
task_sensor_dta_t task_sensor_dta_list[] = {
	{DEL_BTN_XX_MIN, ST_BTN_XX_UP, EV_BTN_XX_UP},
	{DEL_BTN_XX_MIN, ST_BTN_XX_UP, EV_BTN_XX_UP}
};
...



En las primeras dos modificaciones se agrega una fila mas a la lista de sensores para que cada sensor tenga
su propia configuracion, eventos y estados.
También se modificaron la definición de puertos en board.h

#define BTN_A_PIN		GPIO_PIN_0
#define BTN_A_PORT		GPIOA
#define BTN_A_PRESSED	GPIO_PIN_RESET
#define BTN_A_HOVER		GPIO_PIN_SET

#define BTN_B_PIN		GPIO_PIN_1
#define BTN_B_PORT		GPIOA
#define BTN_B_PRESSED	GPIO_PIN_RESET
#define BTN_B_HOVER		GPIO_PIN_SET

y en main.c, en MX_GPIO_Init

  GPIO_InitStruct.Pin = GPIO_PIN_0 | GPIO_PIN_1;
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
  GPIO_InitStruct.Pull = GPIO_NOPULL;		(se coloca la resitencia de pull up afuera)
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
  
  